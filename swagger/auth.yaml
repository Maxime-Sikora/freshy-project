components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token

  schemas:
    SignInDto:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: Monpassword

paths:
  /auth/signin:
    post:
      summary: Se connecter
      description: Authentifie l'utilisateur et pose un cookie HttpOnly `access_token`.
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInDto'
            examples:
              customer:
                value:
                  {
                    email: 'consommateur1@exemple.com',
                    password: 'Monpassword',
                  }
              producer:
                value:
                  { email: 'producteur1@exemple.com', password: 'Monpassword' }
              admin:
                value: { email: 'admin@exemple.com', password: 'Monpassword' }
      responses:
        '204':
          description: Connexion réussie — cookie `access_token` posé.
          headers:
            Set-Cookie:
              description: >
                Cookie d'authentification HttpOnly.
                Exemple: `access_token=eyJ...; Path=/; HttpOnly; SameSite=Lax`
              schema:
                type: string
        '401':
          description: Identifiants invalides

  /auth/logout:
    post:
      summary: Se déconnecter
      description: Supprime le cookie `access_token`.
      tags: [Auth]
      security:
        - cookieAuth: []
      responses:
        '204':
          description: Déconnexion réussie — cookie supprimé.
